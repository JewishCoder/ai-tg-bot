services:
  postgres:
    image: postgres:16-alpine
    container_name: ai-tg-bot-db
    environment:
      POSTGRES_USER: ${DB_USER:-botuser}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME:-ai_tg_bot}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USER:-botuser} -d ${DB_NAME:-ai_tg_bot}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  bot:
    build:
      context: ./backend/bot
      dockerfile: Dockerfile.dev
    container_name: ai-tg-bot
    depends_on:
      postgres:
        condition: service_healthy

    # Volume mapping for persistent data
    volumes:
      - ./logs:/app/logs # Bot logs
      - ./backend/bot/.env.development:/app/.env.development:ro # Read-only config

    # Restart policy
    restart: unless-stopped

    # Environment variables
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1

    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

    # Resource limits (optional, can be adjusted)
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '1.0'
    #       memory: 512M
    #     reservations:
    #       cpus: '0.25'
    #       memory: 128M

volumes:
  postgres_data:
