name: CI - Nginx

on:
  push:
    branches: [main, develop]
    paths:
      - ".build/nginx/**"
      - ".github/workflows/ci-nginx.yml"
  pull_request:
    branches: [main, develop]
    paths:
      - ".build/nginx/**"
      - ".github/workflows/ci-nginx.yml"
  workflow_dispatch:
  workflow_call: # –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å —ç—Ç–æ—Ç workflow –∏–∑ –¥—Ä—É–≥–∏—Ö workflows

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–º–µ–Ω–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö —Å–±–æ—Ä–æ–∫ –ø—Ä–∏ –Ω–æ–≤—ã—Ö –∫–æ–º–º–∏—Ç–∞—Ö
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.run_id }}
  cancel-in-progress: true

env:
  REGISTRY: cr.yandex
  IMAGE_NAME: ai-tg-nginx

jobs:
  nginx-validate:
    name: Nginx - Validate Configuration
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test nginx configuration syntax
        run: |
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
          ls -la .build/nginx/nginx.conf

          # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ Docker
          docker run --rm \
            -v $(pwd)/.build/nginx/nginx.conf:/etc/nginx/nginx.conf:ro \
            nginx:alpine \
            nginx -t -c /etc/nginx/nginx.conf

  nginx-docker:
    name: Nginx - Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: nginx-validate
    # –ü—É–±–ª–∏–∫—É–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–∏ push –≤ main (–Ω–µ –ø—Ä–∏ PR)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read version from VERSION file
        id: version
        run: |
          VERSION=$(cat .build/nginx/VERSION | tr -d '\n\r')
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "üì¶ Building Nginx version: ${VERSION}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Yandex Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: json_key
          password: ${{ secrets.YA_CLOUD_REGISTRY }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./.build/nginx
          file: ./.build/nginx/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ secrets.YC_REGISTRY_ID }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
            ${{ env.REGISTRY }}/${{ secrets.YC_REGISTRY_ID }}/${{ env.IMAGE_NAME }}:latest
          labels: |
            org.opencontainers.image.title=AI Telegram Bot - Nginx Reverse Proxy
            org.opencontainers.image.description=Nginx reverse proxy –¥–ª—è AI TG Bot services
            org.opencontainers.image.version=${{ steps.version.outputs.version }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
            org.opencontainers.image.source=${{ github.repositoryUrl }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image info
        run: |
          echo "‚úÖ Nginx Docker image published successfully!"
          echo ""
          echo "Images:"
          echo "  - ${{ env.REGISTRY }}/${{ secrets.YC_REGISTRY_ID }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}"
          echo "  - ${{ env.REGISTRY }}/${{ secrets.YC_REGISTRY_ID }}/${{ env.IMAGE_NAME }}:latest"
          echo ""
          echo "Version: ${{ steps.version.outputs.version }}"
          echo "Commit: ${{ github.sha }}"
