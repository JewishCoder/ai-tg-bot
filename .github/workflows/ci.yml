name: CI - All Services

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

# Автоматическая отмена устаревших сборок при новых коммитах
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # ===== Detect Changes =====
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      bot: ${{ steps.filter.outputs.bot }}
      api: ${{ steps.filter.outputs.api }}
      frontend: ${{ steps.filter.outputs.frontend }}
      nginx: ${{ steps.filter.outputs.nginx }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            bot:
              - 'backend/bot/**'
              - '.build/Dockerfile'
              - '.github/workflows/ci.yml'
              - '.github/workflows/ci-bot.yml'
            api:
              - 'backend/api/**'
              - '.github/workflows/ci.yml'
              - '.github/workflows/ci-api.yml'
            frontend:
              - 'frontend/**'
              - '.github/workflows/ci.yml'
              - '.github/workflows/ci-frontend.yml'
            nginx:
              - '.build/nginx/**'
              - '.github/workflows/ci.yml'
              - '.github/workflows/ci-nginx.yml'

  # ===== Call Bot Workflow =====
  bot:
    name: Bot CI
    needs: changes
    # Временно отключено для тестирования CI
    # if: needs.changes.outputs.bot == 'true'
    uses: ./.github/workflows/ci-bot.yml
    secrets: inherit

  # ===== Call API Workflow =====
  api:
    name: API CI
    needs: changes
    # Временно отключено для тестирования CI
    # if: needs.changes.outputs.api == 'true'
    uses: ./.github/workflows/ci-api.yml
    secrets: inherit

  # ===== Call Frontend Workflow =====
  frontend:
    name: Frontend CI
    needs: changes
    # Временно отключено для тестирования CI
    # if: needs.changes.outputs.frontend == 'true'
    uses: ./.github/workflows/ci-frontend.yml
    secrets: inherit

  # ===== Call Nginx Workflow =====
  nginx:
    name: Nginx CI
    needs: changes
    # Временно отключено для тестирования CI
    # if: needs.changes.outputs.nginx == 'true'
    uses: ./.github/workflows/ci-nginx.yml
    secrets: inherit

  # ===== Summary =====
  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [changes, bot, api, frontend, nginx]
    if: always()
    steps:
      - name: Generate Summary
        run: |
          echo "## 🎯 CI Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "> **⚠️ Testing Mode**: All services are checked (change detection temporarily disabled)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Services Status:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Bot
          BOT_STATUS="${{ needs.bot.result }}"
          if [ "$BOT_STATUS" == "success" ]; then
            echo "- 🤖 **Bot**: ✅ Passed" >> $GITHUB_STEP_SUMMARY
          elif [ "$BOT_STATUS" == "skipped" ]; then
            echo "- 🤖 **Bot**: ⏭️ Skipped" >> $GITHUB_STEP_SUMMARY
          else
            echo "- 🤖 **Bot**: ❌ Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          # API
          API_STATUS="${{ needs.api.result }}"
          if [ "$API_STATUS" == "success" ]; then
            echo "- 🔌 **API**: ✅ Passed" >> $GITHUB_STEP_SUMMARY
          elif [ "$API_STATUS" == "skipped" ]; then
            echo "- 🔌 **API**: ⏭️ Skipped" >> $GITHUB_STEP_SUMMARY
          else
            echo "- 🔌 **API**: ❌ Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Frontend
          FRONTEND_STATUS="${{ needs.frontend.result }}"
          if [ "$FRONTEND_STATUS" == "success" ]; then
            echo "- 🎨 **Frontend**: ✅ Passed" >> $GITHUB_STEP_SUMMARY
          elif [ "$FRONTEND_STATUS" == "skipped" ]; then
            echo "- 🎨 **Frontend**: ⏭️ Skipped" >> $GITHUB_STEP_SUMMARY
          else
            echo "- 🎨 **Frontend**: ❌ Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Nginx
          NGINX_STATUS="${{ needs.nginx.result }}"
          if [ "$NGINX_STATUS" == "success" ]; then
            echo "- 🌐 **Nginx**: ✅ Passed" >> $GITHUB_STEP_SUMMARY
          elif [ "$NGINX_STATUS" == "skipped" ]; then
            echo "- 🌐 **Nginx**: ⏭️ Skipped" >> $GITHUB_STEP_SUMMARY
          else
            echo "- 🌐 **Nginx**: ❌ Failed" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Commit**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Branch**: \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Triggered by**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
