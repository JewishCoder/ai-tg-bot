const { chromium } = require('playwright');

/**
 * –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã
 * 
 * –ó–∞–ø—É—Å–∫: node test-dashboard-quick.js
 */

async function quickTest() {
    console.log('‚ö° –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã...\n');

    const browser = await chromium.launch({ headless: false });
    const page = await browser.newPage();

    try {
        await page.goto('http://localhost:3000/dashboard');
        await page.waitForTimeout(2000);

        console.log('üìä –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞:');
        let bodyBg = await page.evaluate(() => window.getComputedStyle(document.body).backgroundColor);
        let bodyColor = await page.evaluate(() => window.getComputedStyle(document.body).color);
        let htmlClass = await page.locator('html').getAttribute('class');

        console.log(`  HTML class: "${htmlClass || 'none'}"`);
        console.log(`  Background: ${bodyBg}`);
        console.log(`  Text color: ${bodyColor}\n`);

        console.log('üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞—é –Ω–∞ —Ç–µ–º–Ω—É—é —Ç–µ–º—É...');
        await page.getByRole('button', { name: 'Toggle theme' }).click();
        await page.waitForTimeout(1000);

        console.log('\nüåô –¢–µ–º–Ω–∞—è —Ç–µ–º–∞:');
        bodyBg = await page.evaluate(() => window.getComputedStyle(document.body).backgroundColor);
        bodyColor = await page.evaluate(() => window.getComputedStyle(document.body).color);
        htmlClass = await page.locator('html').getAttribute('class');

        console.log(`  HTML class: "${htmlClass || 'none'}"`);
        console.log(`  Background: ${bodyBg}`);
        console.log(`  Text color: ${bodyColor}`);

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        const isDark = htmlClass && htmlClass.includes('dark');
        const hasDarkBg = !bodyBg.includes('255, 255, 255');

        console.log('\n' + '='.repeat(50));
        if (isDark && hasDarkBg) {
            console.log('‚úÖ –¢–ï–ú–ù–ê–Ø –¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢ –ö–û–†–†–ï–ö–¢–ù–û!');
        } else {
            console.log('‚ùå –¢–ï–ú–ù–ê–Ø –¢–ï–ú–ê –ù–ï –†–ê–ë–û–¢–ê–ï–¢:');
            if (!isDark) console.log('   - –ö–ª–∞—Å—Å .dark –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –∫ <html>');
            if (!hasDarkBg) console.log('   - –§–æ–Ω –æ—Å—Ç–∞–ª—Å—è –±–µ–ª—ã–º');
        }
        console.log('='.repeat(50) + '\n');

        await page.screenshot({ path: 'dark-theme-check.png', fullPage: true });
        console.log('üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: dark-theme-check.png\n');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    } finally {
        await browser.close();
    }
}

quickTest();

