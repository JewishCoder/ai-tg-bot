#!/bin/sh
# Entrypoint script –¥–ª—è production –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
# –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ volume-–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º

set -e

echo "üöÄ Starting AI Telegram Bot..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ -z "$TELEGRAM_TOKEN" ]; then
    echo "‚ùå ERROR: TELEGRAM_TOKEN environment variable is not set"
    exit 1
fi

if [ -z "$OPENROUTER_API_KEY" ]; then
    echo "‚ùå ERROR: OPENROUTER_API_KEY environment variable is not set"
    exit 1
fi

if [ -z "$DB_PASSWORD" ]; then
    echo "‚ùå ERROR: DB_PASSWORD environment variable is not set"
    exit 1
fi

echo "‚úÖ Environment variables validated"

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
mkdir -p /app/data /app/logs /app/.cache

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è volume-–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
echo "üîß Setting up directories permissions..."
echo "   Current user: $(id)"

# –ò–∑–º–µ–Ω—è–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è bot
if chown -R bot:bot /app/data /app/logs /app/.cache 2>&1; then
    echo "   ‚úì Owner changed to bot:bot"
else
    echo "   ‚ö† Warning: Could not change owner (running as non-root?)"
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å
if chmod -R 777 /app/data /app/logs /app/.cache 2>&1; then
    echo "   ‚úì Permissions set to 777"
else
    echo "   ‚ö† Warning: Could not change permissions"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
echo "   Final permissions:"
ls -la /app/logs | head -3
echo ""

echo "‚úÖ Directories ready"
echo "üìÅ Data dir: /app/data"
echo "üìÑ Logs dir: /app/logs"
echo ""

# –°–æ–∑–¥–∞–Ω–∏–µ –ë–î –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
echo "üóÑÔ∏è  Checking database existence..."
export PGPASSWORD="${DB_PASSWORD}"
DB_EXISTS=$(psql -h "${DB_HOST:-postgres}" -p "${DB_PORT:-5432}" -U "${DB_USER:-botuser}" -d postgres -tAc "SELECT 1 FROM pg_database WHERE datname='${DB_NAME:-ai_tg_bot}'" 2>/dev/null || echo "0")

if [ "$DB_EXISTS" = "1" ]; then
    echo "‚úÖ Database '${DB_NAME:-ai_tg_bot}' already exists"
else
    echo "üì¶ Creating database '${DB_NAME:-ai_tg_bot}'..."
    if psql -h "${DB_HOST:-postgres}" -p "${DB_PORT:-5432}" -U "${DB_USER:-botuser}" -d postgres -c "CREATE DATABASE ${DB_NAME:-ai_tg_bot};" 2>/dev/null; then
        echo "‚úÖ Database created successfully"
    else
        echo "‚ö†Ô∏è  Warning: Could not create database (might already exist or insufficient permissions)"
        echo "   Please create database manually:"
        echo "   CREATE DATABASE ${DB_NAME:-ai_tg_bot};"
    fi
fi
unset PGPASSWORD
echo ""

# –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –ë–î
echo "üóÑÔ∏è  Running database migrations..."
if uv run alembic upgrade head; then
    echo "‚úÖ Database migrations completed"
else
    echo "‚ùå ERROR: Database migrations failed"
    echo "   Please check that database exists and credentials are correct"
    exit 1
fi
echo ""

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo "ü§ñ Launching bot..."
exec "$@"

